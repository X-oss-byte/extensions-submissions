name: TOS Check

on:
  issues:
    types:
      - opened
      - reopened
      - edited
  issue_comment:
    types:
      - created
      - edited

env:
  GH_TOKEN: ${{ github.token }}
  GH_REPO: ${{ github.repository }}

jobs:
  check:
    if: github.event.issue.closed == false
    name: Ensure Terms of Service are accepted
    runs-on: ubuntu-latest
    permissions:
      issues: write
    outputs:
        accepted: ${{ steps.are_tos_accepted.outputs.accepted }}
    steps:
      - name: Run /validate command
        if: github.event_name == 'issue_comment'
        run: |
          command=$(echo "${{ github.event.comment.body }}" | head -1)
          if [[ $command != "/validate"* ]]; then
            echo "No /validate command found in first line of the comment \"${command}\", skipping" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi

      - name: Parse issue body
        id: parse
        uses: zentered/issue-forms-body-parser@v1.5.1

      - name: Find TOS checkbox state
        id: are_tos_accepted
        run: |
          echo "accepted=$(echo '${{ steps.parse.outputs.data }}' | jq -r '.["terms-of-services"].list[0].checked' )" >> $GITHUB_OUTPUT

      - name: Remove 'tos/accepted' label
        if: steps.are_tos_accepted.outputs.accepted == 'false'
        run: |
          gh issue edit ${{ github.event.issue.number }} --remove-label tos/accepted
          gh issue edit ${{ github.event.issue.number }} --add-label tos/not-accepted

      - name: Add 'tos/accepted' label
        if: steps.are_tos_accepted.outputs.accepted == 'true'
        run: |
          gh issue edit ${{ github.event.issue.number }} --add-label tos/accepted
          gh issue edit ${{ github.event.issue.number }} --remove-label tos/not-accepted

      - uses: actions/checkout@v3

      - name: Render template when tos are not accepted
        id: template_tos_not_accepted
        if: steps.are_tos_accepted.outputs.accepted == 'false'
        uses: chuhlomin/render-template@v1.6
        with:
          template: .github/workflows/templates/tos-not-accepted.md
          vars: |
            workflow_url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
            user: ${{ github.event.issue.user.login}}

      - name: Add Comment if tos not accepted
        if: steps.are_tos_accepted.outputs.accepted == 'false'
        uses: peter-evans/create-or-update-comment@v2
        with:
          edit-mode: replace
          issue-number: ${{ github.event.issue.number }}
          body: ${{ steps.template_tos_not_accepted.outputs.result }}

      - name: Render template when tos are accepted
        id: template_tos_accepted
        if: steps.are_tos_accepted.outputs.accepted == 'true'
        uses: chuhlomin/render-template@v1.6
        with:
          template: .github/workflows/templates/tos-accepted.md
          vars: |
            workflow_url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
            user: ${{ github.event.issue.user.login}}

      - name: Add Comment if tos accepted
        if: steps.are_tos_accepted.outputs.accepted == 'true'
        uses: peter-evans/create-or-update-comment@v2
        with:
          edit-mode: replace
          issue-number: ${{ github.event.issue.number }}
          body: ${{ steps.template_tos_accepted.outputs.result }}

      - name: Render template when tos are not found
        id: template_tos_not_found
        if: steps.are_tos_accepted.outputs.accepted == 'null'
        uses: chuhlomin/render-template@v1.6
        with:
          template: .github/workflows/templates/tos-not-found.md
          vars: |
            workflow_url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

      - name: Add comment if tos not found
        if: steps.are_tos_accepted.outputs.accepted == 'null'
        uses: peter-evans/create-or-update-comment@v2
        with:
          edit-mode: replace
          issue-number: ${{ github.event.issue.number }}
          body: ${{ steps.template_tos_not_found.outputs.result }}

  validate:
    name: Extension validation
    needs: check
    if: needs.check.outputs.accepted == 'true'
    uses: ./.github/workflows/validation.yaml
